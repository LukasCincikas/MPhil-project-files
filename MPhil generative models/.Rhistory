source('~/.active-rstudio-document')
n
?%%
%%
4%%2
4%%3
source('~/.active-rstudio-document')
n
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
n
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?seq()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
full
plot(full)
?abs()
abs(2)
abs(-2)
a <- -1
valuea <- 3*a + sin(a) - exp(a)
signa <- sign(valuea)
signa
source('~/.active-rstudio-document')
c
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?numeric()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
par(mfrow=c(1,2))
plot(steps,ex_sol-num_sol,type='l',main="Absolute error",xlab="time",ylab="Y-y")
plot(steps,(ex_sol-num_sol)/ex_sol,type='l',main="Relative error",xlab="Time",ylab="i-y/Y")
source('~/.active-rstudio-document')
plot(steps,ex_sol-num_sol,type='l',main="Absolute error",xlab="time",ylab="Y-y")
plot(steps,(ex_sol-num_sol)/ex_sol,type='l',main="Relative error",xlab="Time",ylab="i-y/Y")
plot(steps,ex_sol-num_sol,type='l',main="Absolute error",xlab="time",ylab="Y-y")
source('~/.active-rstudio-document')
par(mfrow=c(1,1))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages("deSolve")
library(deSolve)
par(mfrow=c(1,1))
source('~/.active-rstudio-document')
logistic_sol
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
Lotka_sol_1
plot(Lotka_sol_1)
plot(Lotka_sol_1[,2],Lotka_sol_1[,3],type="l",xlab="N",ylab="P")
plot(Lotka_sol_1[,2],Lotka_sol_1[,3],type="l",xlab="N",ylab="P")
par(mfrow=c(1,1))
plot(Lotka_sol_1[,2],Lotka_sol_1[,3],type="l",xlab="N",ylab="P")
?abline
abline(h=r/omega,col="blue",lty=2)
abline(v=m/(b*omega),col="red",lty=2)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
package_version("rstan")
package_version("StanHeaders")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
package_version("rstan")
library(rstan)
package_version("rstan")
packagevVersion("rstan")
packageVersion("rstan")
packageVersion("StanHeaders")
packageVersion("inline")
example(stan_model, run.dontrun = TRUE)
example(stan_model, run.dontrun = TRUE)
example(stan_model, run.dontrun = TRUE)
?show()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?dim()
force(HairEyeColor)
source('~/.active-rstudio-document')
force(HairEyeColor)
data("HairEyeColor")
source('~/.active-rstudio-document')
EyeHairColor <- data("HairEyeColor")
EyeHairColor
EyeHairColor <- data(HairEyeColor)
EyeHairColor
print(EyeHairColor)
data(HairEyeColor)
print(data(HairEyeColor))
print(data("HairEyeColor))
""
print(data("HairEyeColor"))
force(HairEyeColor)
source('~/.active-rstudio-document')
?sample
source('D:/MPhil/Files from book/DBDA2Eprograms/RunningProportion.R')
?sample
source('D:/MPhil/Files from book/DBDA2Eprograms/RunningProportion.R')
source('D:/MPhil/Files from book/DBDA2Eprograms/IntegralOfDensity.R')
getwd()
setwd("C:/Users/Lukas Cincikas/Documents/R/MPhil generative models")
read.csv("1001-1.csv")
data <- read.csv("1001-1.csv")
View(data)
View(data)
?dnorm
?runif()
?rgamma()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
CurrentPoints[2] <- 2
View(data)
?rbinom()
source('~/.active-rstudio-document')
ObjLeft <- runif(1,min=1,max=10) #Determines number of squares on left in trial
ObjLeft <- floor(ObjLeft)
Pleft <- ObjLeft^alpha / (ObjLeft^alpha + (1-ObjLeft)^alpha) #Determines left colour choice probability
SideChoice[BlockIter] <- rbinom(1,size=1,prob=Pleft) #Colour choice output, 1=left, 0=right
WinResult0 <- runif(1,min=0,max=10)
if(WinResult0>ObjLeft)
{
LeftWon <- 0
}
else
{
LeftWon <- 1
}
Pleft <- ObjLeft^alpha / (ObjLeft^alpha + (1-ObjLeft)^alpha)
Pleft
Pleft <- ObjLeft^alpha / (ObjLeft^alpha + (1-ObjLeft)^alpha)
ObjLeft^alpha
(ObjLeft^alpha + (1-ObjLeft)^alpha)
ObjLeft <- runif(1,min=1,max=10) #Determines number of squares on left in trial
ObjLeft <- floor(ObjLeft) / 10
Pleft <- ObjLeft^alpha / (ObjLeft^alpha + (1-ObjLeft)^alpha)
SideChoice[BlockIter] <- rbinom(1,size=1,prob=Pleft)
SideChoice <- NA
SideChoice[BlockIter] <- rbinom(1,size=1,prob=Pleft)
SideChoice
WinResult0 <- runif(1,min=0,max=1)
if(WinResult0>ObjLeft)
{
LeftWon <- 0
}
else
{
LeftWon <- 1
}
if(WinResult0>ObjLeft)
{
LeftWon <- 0
}
else{
LeftWon <- 1
}
if(WinResult0>ObjLeft)
{
LeftWon <- 0
}
else if (WinResult0 < ObjLeft)
{
LeftWon <- 1
}
if(WinResult0>ObjLeft)
{
LeftWon <- 0
}else if (WinResult0 < ObjLeft)
{
LeftWon <- 1
}
Choice1Func <- function(ObjLeft=ObjLeft,alpha=alpha,gamma=gamma)
{
Pleft <- ObjLeft^alpha / (ObjLeft^alpha + (1-ObjLeft)^alpha)
return(Pleft)
}
Choice1[BlockIter] <- rbinom(1,size=1,prob=Pleft)
Choice1 <- NA
Choice1[BlockIter] <- rbinom(1,size=1,prob=Pleft)
Choice1Func <- function(ObjLeft,alpha,gamma) #determines side/colour choice probability
{
Pleft <- ObjLeft^alpha / (ObjLeft^alpha + (1-ObjLeft)^alpha)
return(Pleft)
}
Choice1Func <- function(ObjLeft=ObjLeft,alpha=alpha,gamma=gamma) #determines side/colour choice probability
{
Pleft <- ObjLeft^alpha / (ObjLeft^alpha + (1-ObjLeft)^alpha)
return(Pleft)
}
?sample()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
SumFactor <- exp(EU[1]*gamma) + exp(EU[2]*gamma) + exp(EU[3]*gamma) + exp(EU[4]*gamma) + exp(EU[5]*gamma)
exp(EU[5]*gamma)
class(Pbet)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
exp(EU[5]*gamma)
log(exp(EU[5]*gamma))
exp(EU[4]*gamma)
exp(EU[3]*gamma)
log(EU[5]*gamma)
EU[1]*gamma
EU[2]*gamma
log(EU[1]*gamma)
log(EU[2]*gamma)
log(EU[1])*gamma
log(EU[2])*gamma
e^10
exp(10)
exp(100)
exp(100)/exp(10)
exp(10)/exp(1)
exp(0.001)
exp(0.01)
exp(14)/exp(12)
exp(0.14)/exp(0.12)
